<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Okzhp</title>
        <link>https://okzhp.github.io/</link>
        <description>这是我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1241683615@qq.com (Caspian)</managingEditor>
            <webMaster>1241683615@qq.com (Caspian)</webMaster><lastBuildDate>Thu, 01 Feb 2024 21:29:45 &#43;0800</lastBuildDate>
            <atom:link href="https://okzhp.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Leetcode 图</title>
    <link>https://okzhp.github.io/leetcode-%E5%9B%BE/</link>
    <pubDate>Thu, 01 Feb 2024 21:29:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E5%9B%BE/</guid>
    <description><![CDATA[LeetCode75-面试必考精华版 图-DFS 1、841. 钥匙和房间 BFS，queue中存储钥匙，初始要将第一个房间标为已访问 1 2 3 4 5 6 7]]></description>
</item>
<item>
    <title>Leetcode 二叉树</title>
    <link>https://okzhp.github.io/leetcode-%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
    <pubDate>Thu, 01 Feb 2024 21:28:54 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
    <description><![CDATA[LeetCode75-面试必考精华版 深度优先搜索DFS 1、104. 二叉树的最大深度 深度优先搜索： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22]]></description>
</item>
<item>
    <title>Leetcode 栈和队列和链表</title>
    <link>https://okzhp.github.io/leetcode-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E5%92%8C%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Thu, 01 Feb 2024 21:28:43 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E5%92%8C%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[# LeetCode75-面试必考精华版 栈 1、2390. 从字符串中移除星号 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { //遍历字符串，不是星号就入栈，是]]></description>
</item>
<item>
    <title>Leetcode 哈希表和哈希集合</title>
    <link>https://okzhp.github.io/leetcode-%E5%93%88%E5%B8%8C%E8%A1%A8%E5%92%8C%E5%93%88%E5%B8%8C%E9%9B%86%E5%90%88/</link>
    <pubDate>Thu, 01 Feb 2024 21:25:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E5%93%88%E5%B8%8C%E8%A1%A8%E5%92%8C%E5%93%88%E5%B8%8C%E9%9B%86%E5%90%88/</guid>
    <description><![CDATA[LeetCode75-面试必考精华版 1、2215. 找出两数组的不同 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public List&lt;List&lt;Integer&gt;&gt; findDifference(int[] nums1, int[] nums2) { Set&lt;Integer&gt; set1 = Arrays.stream(nums1).boxed().collect(Collectors.toSet()); Set&lt;Integer&gt; set2 = Arrays.stream(nums2).boxed().collect(Collectors.toSet()); for(int n : nums1){ if(set2.contains(n))set2.remove(n);]]></description>
</item>
<item>
    <title>Leetcode 滑动窗口</title>
    <link>https://okzhp.github.io/leetcode-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link>
    <pubDate>Fri, 26 Jan 2024 23:16:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</guid>
    <description><![CDATA[LeetCode75-面试必考精华版 1、643. 子数组最大平均数 I 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Solution { public double findMaxAverage(int[] nums, int k) { int max,tmp = 0; //先计算窗口k]]></description>
</item>
<item>
    <title>Leetcode 双指针</title>
    <link>https://okzhp.github.io/leetcode-%E5%8F%8C%E6%8C%87%E9%92%88/</link>
    <pubDate>Fri, 26 Jan 2024 23:16:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E5%8F%8C%E6%8C%87%E9%92%88/</guid>
    <description><![CDATA[LeetCode75-面试必考精华版 1、283. 移动零 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public void moveZeroes(int[] nums) { int len = nums.length; //i指针用于遍历非0数字，j]]></description>
</item>
<item>
    <title>Leetcode 字符串</title>
    <link>https://okzhp.github.io/leetcode-%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Thu, 25 Jan 2024 23:12:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/leetcode-%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[LeetCode75-面试必考精华版-字符串部分 1、1768. 交替合并字符串 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public String mergeAlternately(String word1, String word2) { /]]></description>
</item>
<item>
    <title>Redis主从搭建_哨兵搭建</title>
    <link>https://okzhp.github.io/redis%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA_%E5%93%A8%E5%85%B5%E6%90%AD%E5%BB%BA/</link>
    <pubDate>Tue, 09 Jan 2024 21:22:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/redis%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA_%E5%93%A8%E5%85%B5%E6%90%AD%E5%BB%BA/</guid>
    <description><![CDATA[Redis主从搭建 工作中虽然用过redis，但是并没有深入研究整个搭建的过程，搭建过程中也踩了不少坑，借此记录一下。 1、兵马未动，粮草先行 为]]></description>
</item>
<item>
    <title>我的2023</title>
    <link>https://okzhp.github.io/%E6%88%91%E7%9A%842023/</link>
    <pubDate>Sun, 31 Dec 2023 12:37:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/%E6%88%91%E7%9A%842023/</guid>
    <description><![CDATA[1.前言 兴许是失业带来的焦虑，迟迟难以下笔，又或者是2023过于平淡，一时想不到写些什么。算了，随便写点东西，也算是对2023有个纪念。 最近]]></description>
</item>
<item>
    <title>最近三两事</title>
    <link>https://okzhp.github.io/%E6%9C%80%E8%BF%91%E4%B8%89%E4%B8%A4%E4%BA%8B/</link>
    <pubDate>Mon, 10 Jul 2023 19:41:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://okzhp.github.io/%E6%9C%80%E8%BF%91%E4%B8%89%E4%B8%A4%E4%BA%8B/</guid>
    <description><![CDATA[2023/07/10 正如程序开发过程中，如果不出意外的话，又要出意外了。 之前下决心保持博客和gzh的更新频率，除了下决心时是真的想要坚持，等三分钟热度过去，早]]></description>
</item>
</channel>
</rss>
