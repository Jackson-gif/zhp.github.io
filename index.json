[{"categories":[""],"content":"dmk,snf.k,dsanf,. 愤怒的考虑是否你看拉萨的奶粉 对付你们开了多少 发明三等奖离开 ","date":"2023-01-04","objectID":"/test/:0:0","tags":[""],"title":"Test","uri":"/test/"},{"categories":["博客搭建"],"content":"这是Hugo搭建博客的第二期，第一期请参考：Hugo搭建博客（上） - Okzhp ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:0:0","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"1.Hugo(LoveIt)美化 本站对主题的改造体现在以下几个方面： 鼠标点击爆炸/评论区输入框输入爆炸+震动 卜算子访问量统计及网站运行时间 设置valine评论 副标题引用一言api 注意，本文所述js文件都放在static/js文件夹下。 hugo静态文件一般放在static或者assets文件夹下，但是favicon.png在assets文件夹下无法打包至public，因此我把所有静态文件都放在static文件夹下了。 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:1:0","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"1.鼠标点击爆炸和输入框爆炸 效果：点击页面即可看到效果，文末评论框也可看到效果。 出处：点击特效未找到出处，输入特效是我在github中发现的一个项目传送门. 将click-boom.js、input-boom.js下载至js文件夹。 将themes/LoveIt/layouts/partials/assets.html复制到layouts/partials/assets.html（根目录下的文件优先级高于主题内的文件，在外部改动将不影响后续主题版本更新） 编辑assets.html，在末尾引入以上两个js \u003c!-- 点击爆炸特效 --\u003e \u003cscript type=\"text/javascript\" src=\"/js/click-boom.js\"\u003e\u003c/script\u003e \u003c!-- 输入框爆炸+震动 --\u003e \u003cscript type=\"text/javascript\" src=\"/js/input-boom.js\"\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\"\u003e POWERMODE.colorful = true; // make power mode colorful POWERMODE.shake = true; // turn off shake document.body.addEventListener('input', POWERMODE); \u003c/script\u003e 至此，两个特效已经实现了。但是评论系统在开发环境默认是关闭的，LoveIt集成了好几种评论系统，以valine为例，在配置文件中搜索valine，把其下的enable = false改为true，然后在执行hugo server -e production即可看到评论系统。此时评论系统还只是半成品，需要设置其服务端才可以正常使用。这个后文再讲。 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:1:1","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"2.卜算子访问量统计/网站运行时间 官网传送门 效果如下，（本地网络的次数有误，上线后正常） 在assets.html引入js处添加以下： \u003cscript async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"\u003e\u003c/script\u003e \u003c!-- 运行时间 --\u003e \u003cscript type=\"text/javascript\" src=\"/js/cal-runtime.js\"\u003e\u003c/script\u003e 在static/js文件夹下创建cal-runtime.js，粘贴以下内容： /* 站点运行时间 */ function siteTime() { let seconds = 1000; let minutes = 60000; let hours = 3600000; let days = 86400000; let years = 31536000000; let diff = new Date() - new Date('12/31/2022 00:00:00'); // let diffYears = Math.floor(diff / years); let diffDays = Math.floor(diff / days); let diffHours = Math.floor((diff%days)/hours); let diffMinutes = Math.floor((diff%hours) / minutes); let diffSeconds = Math.floor((diff%minutes) / seconds); let runbox = document.getElementById('run-time'); runbox.innerHTML = '本站已运行\u003ci class=\"far fa-clock fa-fw\"\u003e\u003c/i\u003e ' + ((diffDays \u003c 10) ? '0' : '') + diffDays + ' 天 ' + ((diffHours \u003c 10) ? '0' : '') + diffHours + ' 时 ' + ((diffMinutes \u003c 10) ? '0' : '') + diffMinutes + ' 分 ' + ((diffSeconds \u003c 10) ? '0' : '') + diffSeconds + ' 秒 '; } setInterval(siteTime, 1000); 将themes/LoveIt/layouts/partials/footer.html复制到layouts/partials/footer.html 在\u003cdiv class=\"footer-container\"\u003e这一行下边添加以下： \u003c!-- 运行时间 --\u003e {{ if .Site.Params.runtime.enable -}} \u003cdiv class=\"footer-line\"\u003e \u003cspan id=\"run-time\"\u003e\u003c/span\u003e \u003c/div\u003e {{- end -}} \u003c!-- 访问量 --\u003e \u003c!-- busuanzi --\u003e {{ if .Site.Params.busuanzi.enable -}} \u003cdiv class=\"busuanzi-footer\"\u003e {{ if .Site.Params.busuanzi.sitePV -}} \u003cspan id=\"busuanzi_container_site_pv\"\u003e \u003ci class=\"far fa-eye\"\u003e\u003c/i\u003e \u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e次 \u003c/span\u003e {{- end -}} \u0026nbsp;|\u0026nbsp; {{ if .Site.Params.busuanzi.siteUV -}} \u003cspan id=\"busuanzi_container_site_uv\"\u003e \u003ci class=\"fas fa-users\"\u003e\u003c/i\u003e \u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e人次 \u003c/span\u003e {{- end -}} \u003c/div\u003e {{- end -}} 至此，卜算子访问量统计和网站运行时间已经实现。 在配置文件中，可以找到 [params.runtime]和 [params.busuanzi]这两项配置，通过这些开关可以控制访问量和运行时间是否进行展示 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:1:2","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"3.valine评论 官网传送门 需要登录leanCloud，创建一个应用，获取AppId和AppKey，并在配置文件中进行配置(ctrl+f查找)，除此外还需配置severUrls才可正常使用评论功能。 三个参数分别如下图： 如果有域名，最好绑定自己的域名。 设置好以上三个参数就可以正常使用评论功能了。valine已经没有邮箱评论通知的功能了，如果需要评论邮箱提醒需要使用valine-admin，使用方法请自行查阅在此不再赘述。还有其他几种评论系统，请自行尝试。 顺带提一下，在后台也可以对评论进行一些操作： ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:1:3","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"4.副标题引用一言Api 官网一言开发者中心 | 用代码表达言语的魅力，用代码书写山河的壮丽。 (hitokoto.cn) 首先在配置文件中搜索subtitle，将其值设为\" \"，注意有一个空格，如果没有空格将不存在副标题。空格只是打开开关，然后由js设置为一言的内容。 类似的，在上文提到的assets.html末尾添加以下内容： \u003c!-- typeit --\u003e \u003cscript src=\"https://cdn.jsdelivr.net/npm/typeit@6.1.1/dist/typeit.min.js\"\u003e\u003c/script\u003e \u003c!-- 副标题文字请求一言接口 --\u003e \u003cscript type=\"text/javascript\"\u003e // a动画b漫画c游戏d文学e原创f来自网络g其他h影视i诗词j网易云k哲学l抖机灵 let url = \"https://v1.hitokoto.cn/?c=a\u0026c=b\u0026c=k\u0026c=j\u0026c=i\u0026c=c\u0026encode=text\" oneWord(); function oneWord() { let req = new XMLHttpRequest(); req.open(\"GET\", url); req.responseType = \"text\" req.send(); req.onload = function() { let text = \"一个人在他停止学习的时候就已经死了\"; if (req.status === 200) { // 分析响应的 HTTP 状态 text = req.responseText; } new TypeIt(\"#id-1\", { strings: text, }).go(); }; } \u003c/script\u003e 这里需要引入typeit的js，即使主题已经有了包含了typeit，但此处不引入会导致副标题多一个换行。 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:1:4","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"2.部署及优化 秉着能省则省的原则，我将用零成本打造一个尽可能舒适的博客体验。 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:2:0","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"1.部署到github pages 当调整完布局和内容后，我们就可以开始部署（托管）到github pages了。 首先需要在github建立一个public仓库，仓库名为 用户名.github.io。 在博客的根目录执行hugo命令，此命令将在public文件夹中构建出该博客网站。 cd public #将public初始化为git仓库，后续将通过git管理内容 git init git remote add origin https://github.com/okzhp/okzhp.github.io.git # 将所有内容添加到git库 git add . git commit -m \"第一次提交\" # 如果push失败，请先执行git pull master然后再push git push master git网络不太稳定，很有可能push失败，最好使用翻墙网络。 在cmd中设置http和https代理方法： set http_proxy=http://127.0.0.1:端口号 set https_proxy=http://127.0.0.1:端口号 通常clash http端口号为7890 push完后在仓库页面，选择部署分支为当前分支master， github将自动部署该博客，通过用户名.github.io即可访问。 后续更新文章通过命令: #查看仓库状态 git status git add . git commit -m \"第一次提交\" # 如果push失败，请先执行git pull master然后再push git push master ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:2:1","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"2.域名申请/绑定 通过用户名.github.io虽然可以访问，但还差点意思，如果通过自己的域名访问那就更好了。 国内许多平台可以买域名，但是国内的域名需要备案才能使用。因此我选择了国外的域名，而且是免费的。 这部分涉及的网站需要科学上网才可访问，请自行解决。 我申请免费域名的方法暂时已经失效了，域名的问题请自行解决，网络上应该有许多免费域名的获取方法。 在域名服务商的管理台正确配置DNS解析。 首先在cmd ping一下博客地址，记下该ip地址： 在DNS解析处添加以下两条配置： 如果是ipv4则是：A类型 okzhp.tk ip地址，如果是ipv6则是AAAA类型。 CNAME www 仓库地址(例如okzhp.github.io) DNS解析通常要几分钟才能生效，随后在github page页面配置该域名即可： 至此就完成了对域名的配置。 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:2:2","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"2.图床配置 图床，即存储图片的服务器，通过一个链接即可方便的进行访问。例如本站图片都是存储在七牛云服务器上，配置完图床对于处理图片将会非常的方便。本站的图床配置是通过七牛云和PicGo实现的。 注意：图床配置需要有自己的域名才可以，因为七牛云只提供一个有效期一个月的仅供测试用的域名，因此需要绑定自己的域名。七牛云有若干个地区，国内的地区使用域名必须有备案，换言之，没有备案的域名只能使用国外的存储空间。例如我用的存储区域就在北美。 七牛云 首先注册登录七牛云，需要进行身份认证和邮箱绑定，完成后每个月将有10g的存储空间和10g的下载流量。对于个人博客来说，简直不要太完美。 首先打开对象存储-空间管理-新建空间，如图： 新建一个空间，创建完毕后，在对应位置记住红框内的五个参数，后面要使用： PicGo 在PicGo is Here | PicGo页面下载PicGo。在设置中进行参数配置： 设定访问网址即七牛云提供的临时域名或者绑定的域名。区域则填对应的区域代码：华东z0，华北z1，华南z2，北美na0，东南亚as0 存储路径则是你上传的路径。 复制一张图片，使用ctrl+shift+p快捷键进行上传，上传成功即可。 随后在md编辑器typora偏好设置-图像 选择picgo安装路径： 配置完毕后，在typora粘贴图片时将自动上传至七牛云并引用其超链接，可以很方便的引用图片。 typora目前的版本都是收费的，其支持图床配置的最后一个免费版本是0.9.96 ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:2:3","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"3.后续 整个博客的搭建大概花了三天时间，第一天搭建了主要的骨架，第二天处理域名和valine评论相关，第三天做了一些美化和图床处理。本打算第四天发文记录，结果拖到第五天才开始下笔，愣是写了两天才才把大致过程略讲了一遍，而且有很多地方一笔带过了。总之，这也是一个总结复盘的过程。 个人认为，博客还存在以下几个方面待改进： 图片存储在国外，访问速度较慢 域名虽是免费的，但没有备案无法在国内使用，且有效期仅有一年。 尚未完成部署脚本一键部署 评论邮箱提醒功能缺失（由于leanCloud自动唤醒被禁止了） 后续再补🤖 总之，本次博客搭建参考了大量网络内容，包括但不限于以下参考： Github Pages + Hugo 搭建个人博客 - 渣渣的夏天 (zz2summer.github.io) Hugo系列(3.1) - LoveIt主题美化与博客功能增强 · 第二章 - Yulin Lewis’ Blog (lewky.cn) ","date":"2023-01-03","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/:3:0","tags":["Hugo"],"title":"Hugo搭建博客（下）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"},{"categories":["博客搭建"],"content":"这是Hugo搭建博客的第一期，第二期请参考：Hugo搭建博客（下） - Okzhp ","date":"2023-01-02","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/:0:0","tags":["Hugo"],"title":"Hugo搭建博客（上）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"},{"categories":["博客搭建"],"content":"1.前言 ​ 很早之前就想要搭建一个博客，奈何伊始眼界太窄，不知以何种方式搭建博客。当时还在github上搜一些博客项目，譬如nbBlog、halo等。也听说过github搭建博客，但却不了解它到底是个什么形态。由于种种信息差，我很长时间内一直以为需要买一台服务器然后才能搭建自己的博客，最终也就搁置了。 后来了解到hugo，花了几天时间研究，没少折腾，最终也算有了博客的雏形。谨以此文作为自己的第一篇博客，记录一下博客搭建的过程。 提示\r学习新技术的一种绝佳方式就是看官方文档。 本文对于一些说明可以直接点击跳转到官网说明。 Let’s Begin！ 相关文档说明\r通常github上较火的项目都会有文档说明，有些有中文说明，如果没有中文说明的话，可以尝试google搜索项目名 中文，通常可以找到相关文档。 以下列出本文参考的一些文档和链接： Hugo官方文档 Hugo中文文档 LoveIt官方文档中文 ","date":"2023-01-02","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/:1:0","tags":["Hugo"],"title":"Hugo搭建博客（上）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"},{"categories":["博客搭建"],"content":"2.何为Hugo? Hugo是一个用go语言实现的静态网站构建框架，github上star数64.5k（截止到2023.1.2）。Hugo的官网是这么介绍的：The world’s fastest framework for building websites。世界上最快的构建网站的框架，简单来说就是一个用来构建静态网站的框架。 需要注意的是，hugo有许多主题可选，想要构建自己的博客，需要选一款中意的主题，然后在此基础上进行配置或自定义修改。 静态网站构建框架对比\rHugo、Hexo、Jekyll。 博客生成器也叫静态网站生成器，是一种将文本文档通过一些处理生成一个有机整体的html语言的网站，由于生成的静态网页可以直接托管在主机或vps上，配合nginx或Apache就可以供网民使用。github与gitcafe等网站也支持免费托管静态网页文件，非常方便。 编译速度：Hugo\u003ehexo\u003eJekyll Hugo使用go语言是一种编译型语言，速度非常快，而Jekyll使用ruby编写，hexo使用nodejs编写，ruby与nodejs都是面向对象的高级解释型语言，执行效率比编译型语言要低。 ","date":"2023-01-02","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/:2:0","tags":["Hugo"],"title":"Hugo搭建博客（上）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"},{"categories":["博客搭建"],"content":"3.使用Hugo前置条件 Hugo官网推荐使用Hugo前安装Git和Go。在我搭建博客的过程中，git是必须的，go并非必须。 使用Hugo搭建博客需要安装Hugo和Git。以下仅对Hugo安装进行说明，git安装请自行搜索。 Hugo有两个版本，这是官网安装Hugo的说明： 安装方式有好几种，选择一种安装即可： 直接下载编译好的exe文件。下载地址 通过包管理器安装（一行命令即可，但需要首先安装对应包管理器）。 通过Go安装构建。 简单来说，需要先安装git以及1.18版本以上的go并设置好环境变量。然后执行下面两条命令： #通过go安装Hugo go install -tags extended github.com/gohugoio/hugo@latest #查看Hugo版本，注意是extended版本 hugo version ","date":"2023-01-02","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/:3:0","tags":["Hugo"],"title":"Hugo搭建博客（上）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"},{"categories":["博客搭建"],"content":"4.Hugo快速上手 注意：Hugo使用md文件，常用的md文件编辑器是typora，typora目前版本都是收费的，分享一个免费的版本点我下载，该版本(0.9.96)应该是支持后文提到图床配置的最后一个免费版本。 快速上手参考官网quick start。 至此，如果在命令行中执行hugo和git如果没有报错，即可开始下一步了。 #创建一个quickstart网站的骨架 hugo new site quickstart #进入该文件夹 cd quickstart 然后就需要在主题列表选择一个主题，并复制其git地址，比如我选择的就是LoveIt，然后执行： #将主题clone到themes/LoveIt文件夹下 git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt #注意，现在只是下载了主题但还没有应用，打开quickstart文件夹下的config.toml 添加下面两行配置： theme = 'LoveIt' buildDrafts = true 前者指定了主题，后者指定了将草稿也进行构建（新建的文章默认是草稿）。 #创建第一篇文章first_post,该文章在content/posts文件夹下，这是默认的文章路径 hugo new posts/first_post.md #在编辑好文章后 执行以下命令启动网站。 hugo serve 然后在对应端口即可访问网站。 此时，网站还非常简陋，如下： 至此，骨架已经搭建完毕。下面将对界面进行基本的配置。 ","date":"2023-01-02","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/:4:0","tags":["Hugo"],"title":"Hugo搭建博客（上）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"},{"categories":["博客搭建"],"content":"5.LoveIt初配置 注意\r该部分配置仅针对LoveIt主题，不同的主题配置有所差异，因此务必参考官方文档说明。LoveIt的官方文档还是比较详尽的，而且有中文版。\r技巧\r官网的quick start就像数学课本的例题一样， 例：1+1=2，既然已知1+1=2，那我们就可以推导出$c = \\pm\\sqrt{a^2 + b^2}$ and \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\) 页面的外观基本上取决于你的配置文件config.toml（或者config.yaml），因此一个健全的config.toml就可以实现基本的外观布局。 经过简单的配置后，现在的配置文件应该是这样： baseURL = 'http://example.org/' languageCode = 'en-us' title = 'My New Hugo Site' theme = 'LoveIt' buildDrafts = true 下面罗列一些基本的配置，了解基本的配置有助于理解配置的原理。尝试将以下配置追加在配置文件中。 尝试替换配置中的一些[ICON](Find the Perfect Icon for Your Project in Font Awesome 5 | Font Awesome) # 设置默认的语言 [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"zh-cn\" # 菜单，也就是最上边的一排栏目 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [[menu.main]] weight = 4 identifier = \"about\" pre = \"\" post = \"\" name = \"关于\" url = \"/about\" title = \"\" [[menu.main]] weight = 5 identifier = \"github\" pre = \"\u003ci class='fab fa-github fa-fw' aria-hidden='true'\u003e\u003c/i\u003e\" post = \"\" name = \"\" url = \"https://github.com/okzhp\" title = \"GitHub\" # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # 移动端导航栏模式 [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"Okzhp\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = '\u003ci class=\"fab fa-joomla\"\u003e\u003c/i\u003e' # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = false # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2022 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' 上边罗列了最基本的header、菜单栏已经footer的配置。以下为一个较为完整的配置文件（仅供参考）： baseURL = \"https://okzhp.github.io\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"Okzhp\" # 是否构建草稿 buildDrafts = true # 设置默认的语言 [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 默认每页列表显示的文章数目 paginate = 12 # 谷歌分析代号 [UA-XXXXXXXX-X] googleAnalytics = \"\" # 版权描述，仅仅用于 SEO copyright = \"\" # 是否使用 robots.txt enableRobotsTXT = true # 是否使用 git 信息 enableGitInfo = false # 是否使用 emoji 代码 enableEmoji = true # 忽略一些构建错误 ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # 作者配置 [author] name = \"Caspian\" email = \"1241683615@qq.com\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [[menu.main]] weight = 4 identifier = \"about\" pre = \"\" post = \"\" name = \"关于\" url = \"/about\" title = \"\" [[menu.main]] weight = 5 identifier = \"github\" pre = \"\u003ci class='fab fa-github fa-fw' aria-hidden='true'\u003e\u003c/i\u003e\" post = \"\" name = \"\" url = \"https://github.com/okzhp\" title = \"GitHub\" [params] # 网站默认主题样式 [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"https://github.com/okzhp\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站标题, 用于 Open Graph 和 Twitter ","date":"2023-01-02","objectID":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/:5:0","tags":["Hugo"],"title":"Hugo搭建博客（上）","uri":"/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"},{"categories":[""],"content":" 在繁杂的世界里，我们都需要一片净土。 为什么写博客，看过一个精妙的回答： 🥰于职业来讲，技术更迭太快，博客可以记录平时遇到的问题，供随时查看 🤩于个人来讲，可以作为名片，提高个人的影响力和知名度 🤖于生态来讲，丰富了互联网生态，为他人提供解决问题的思路 ","date":"2023-01-02","objectID":"/about/:0:0","tags":[""],"title":"关于博客","uri":"/about/"}]